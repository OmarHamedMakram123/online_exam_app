// Mocks generated by Mockito 5.4.4 from annotations
// in online_exam_app/test/src/data/repositories/auth_repository_impl/auth_repositorty_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:online_exam_app/src/data/data_source/offline_data_source/auth_offline_data_source/auth_offline_data_source.dart'
    as _i12;
import 'package:online_exam_app/src/data/data_source/online_data_source/auth_data_source/auth_online_data_source.dart'
    as _i5;
import 'package:online_exam_app/src/data/mappers/auth_mapper.dart' as _i11;
import 'package:online_exam_app/src/data/model/request/change_password_request.dart'
    as _i10;
import 'package:online_exam_app/src/data/model/request/login_request.dart'
    as _i7;
import 'package:online_exam_app/src/data/model/request/register_request.dart'
    as _i8;
import 'package:online_exam_app/src/data/model/request/update_profile_request.dart'
    as _i9;
import 'package:online_exam_app/src/data/model/response/app_user_model/app_user_model.dart'
    as _i2;
import 'package:online_exam_app/src/data/model/response/success_auth_reponse_model/success_response_model.dart'
    as _i3;
import 'package:online_exam_app/src/domain/entities/app_user_entity.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppUserModel_0 extends _i1.SmartFake implements _i2.AppUserModel {
  _FakeAppUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSuccessResponseModel_1 extends _i1.SmartFake
    implements _i3.SuccessResponseModel {
  _FakeSuccessResponseModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppUserEntity_2 extends _i1.SmartFake implements _i4.AppUserEntity {
  _FakeAppUserEntity_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthOnlineDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthOnlineDataSource extends _i1.Mock
    implements _i5.AuthOnlineDataSource {
  MockAuthOnlineDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.AppUserModel> login(_i7.LoginRequest? loginRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [loginRequest],
        ),
        returnValue: _i6.Future<_i2.AppUserModel>.value(_FakeAppUserModel_0(
          this,
          Invocation.method(
            #login,
            [loginRequest],
          ),
        )),
      ) as _i6.Future<_i2.AppUserModel>);

  @override
  _i6.Future<_i2.AppUserModel> register(_i8.RegisterRequest? registerRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [registerRequest],
        ),
        returnValue: _i6.Future<_i2.AppUserModel>.value(_FakeAppUserModel_0(
          this,
          Invocation.method(
            #register,
            [registerRequest],
          ),
        )),
      ) as _i6.Future<_i2.AppUserModel>);

  @override
  _i6.Future<_i2.AppUserModel> getProfileDate() => (super.noSuchMethod(
        Invocation.method(
          #getProfileDate,
          [],
        ),
        returnValue: _i6.Future<_i2.AppUserModel>.value(_FakeAppUserModel_0(
          this,
          Invocation.method(
            #getProfileDate,
            [],
          ),
        )),
      ) as _i6.Future<_i2.AppUserModel>);

  @override
  _i6.Future<_i2.AppUserModel> updateProfile(
          {required _i9.UpdateProfileRequest? updateProfileRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {#updateProfileRequest: updateProfileRequest},
        ),
        returnValue: _i6.Future<_i2.AppUserModel>.value(_FakeAppUserModel_0(
          this,
          Invocation.method(
            #updateProfile,
            [],
            {#updateProfileRequest: updateProfileRequest},
          ),
        )),
      ) as _i6.Future<_i2.AppUserModel>);

  @override
  _i6.Future<_i3.SuccessResponseModel> changePassword(
          {required _i10.ChangePasswordRequest? changePasswordRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [],
          {#changePasswordRequest: changePasswordRequest},
        ),
        returnValue: _i6.Future<_i3.SuccessResponseModel>.value(
            _FakeSuccessResponseModel_1(
          this,
          Invocation.method(
            #changePassword,
            [],
            {#changePasswordRequest: changePasswordRequest},
          ),
        )),
      ) as _i6.Future<_i3.SuccessResponseModel>);
}

/// A class which mocks [AuthMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthMapper extends _i1.Mock implements _i11.AuthMapper {
  MockAuthMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.AppUserEntity toAppUserModel(_i2.AppUserModel? appUserModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #toAppUserModel,
          [appUserModel],
        ),
        returnValue: _FakeAppUserEntity_2(
          this,
          Invocation.method(
            #toAppUserModel,
            [appUserModel],
          ),
        ),
      ) as _i4.AppUserEntity);
}

/// A class which mocks [AuthOfflineDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthOfflineDataSource extends _i1.Mock
    implements _i12.AuthOfflineDataSource {
  MockAuthOfflineDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> saveToken({required String? token}) => (super.noSuchMethod(
        Invocation.method(
          #saveToken,
          [],
          {#token: token},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
